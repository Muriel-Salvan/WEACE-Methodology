* Regression:
** Create test framework for Slave/Listeners
** Create tests for configuration files (invalid data inside, missing properties...)
** Add checks ensuring that every possible Adapter has a unit test.
** Add checks for generic process flow of SlaveAdapters.

* Development:
** Implement in-code TODOs
** Implement Product verification (version...) before installing
** Check WEACEShowMaster/SlaveInfo relevance
** Big code review to remove useless functions
** When WEACE Slave Client does not execute Actions due to uninstalled or unconfigured Adapters, we have to know it.
** Check if DBEnv.sh can be removed.
** Implement uninstall (generic) function on WEACEInstall.rb.
** Replace "#!/usr/bin/env ruby" files with platform independent ones.
** Replace .sh creation with platform independent one.
** Implement dumpTerminal
** Master processes have to be able to know which slave tools are accessible. They can use this info to optimize their processing (if they don't, no problem, useless slave actions will just be ignored).
** Master processes have to be able to know the slave tools configurations to better tune their behaviour (for example, a SlaveProvider accepting only Windows files).
