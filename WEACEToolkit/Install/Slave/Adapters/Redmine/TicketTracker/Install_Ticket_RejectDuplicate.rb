# Usage: This file is used by other files.
# Do not call it directly.
#
# Check http://weacemethod.sourceforge.net for details.
#--
# Copyright (c) 2009 Muriel Salvan (murielsalvan@users.sourceforge.net)
# Licensed under BSD LICENSE. No warranty is provided.
#++

require 'Install/Slave/Adapters/Redmine/Install_Redmine_Common.rb'

module WEACEInstall

  module Slave
  
    module Adapters
  
      module Redmine
      
        module TicketTracker
        
          class Ticket_RejectDuplicate
          
            include WEACE::Logging
          
            # Get options of this installer
            #
            # Parameters:
            # * *ioDescription* (_ComponentDescription_): The component's description to fill
            def getDescription(ioDescription)
              ioDescription.Version = '0.0.1.20090414'
              ioDescription.Description = 'This adapter creates a relation between a master and a slave tickets, and reject the slave as a duplicate of the master.'
              ioDescription.Author = 'murielsalvan@users.sourceforge.net'
              ioDescription.addVarOption(:RedmineDir,
                '-d', '--redminedir <RedmineDir>', String,
                '<RedmineDir>: Redmine\'s installation directory.',
                'Example: /home/groups/m/my/myproject/redmine')
              ioDescription.addVarOption(:RubyGemsLibDir,
                '-r', '--rubygemslib <RubyGemsPath>', String,
                '<RubyGemsPath>: Path to the directory containing rubygems.rb.',
                'Example: /home/groups/m/my/myproject/rubygems/lib')
              ioDescription.addVarOption(:GemsDir,
                '-g', '--gems <GemsPath>', String,
                '<GemsPath>: Path to the directory containing the Gems repository.',
                'Example: /home/groups/m/my/myproject/rubygems/mygems')
              ioDescription.addVarOption(:MySQLLibDir,
                '-m', '--mysql <MySQLLibPath>', String,
                '<MySQLLibPath>: Path to the directory containing the MySQL (C-Connector) library.',
                'Example: /home/groups/m/my/myproject/mysql/lib')
            end
            
            # Execute the installation
            #
            # Parameters:
            # * *iParameters* (<em>list<String></em>): Additional parameters to give the installer
            # * *iProviderEnv* (_ProviderEnv_): The Provider specific environment
            # Return:
            # * _Boolean_: Has the operation completed successfully ?
            def execute(iParameters, iProviderEnv)
              # First, modify common parts
              WEACEInstall::Slave::Adapters::RedmineInstall.new.execute(@RedmineDir, iProviderEnv)
              # Generate the database environment file that will be used by the Adapter scripts
              lDBEnvFileName = "#{$WEACEToolkitDir}/Slave/Adapters/Redmine/DBEnv.rb"
              log "Generate database environment file for Redmine (#{lDBEnvFileName}) ..."
              File.open(lDBEnvFileName, 'w') do |iFile|
                iFile << "
# This file has been generated by the installer of some Redmine's WEACE Slave Adapters.
# Do not modify it.
# It is used by some WEACE Slave Adapters scripts to get the environment necessary to access the underlying Redmine's database.

module WEACE

  module Slave
  
    module Adapters
    
      module Redmine
      
        # Set the database environment
        def self.setDBEnv
          # The RubyGems library
          $LOAD_PATH << '#{@RubyGemsLibDir}'
          # The Gems home
          ENV['GEM_HOME'] = '#{@GemsDir}'
          # The Mysql library
          if (ENV['LD_LIBRARY_PATH'] == nil)
            ENV['LD_LIBRARY_PATH'] = '#{@MySQLLibDir}'
          else
            ENV['LD_LIBRARY_PATH'] = \"\#{ENV['LD_LIBRARY_PATH']}:#{@MySQLLibDir}\"
          end
        end
        
      end
      
    end
    
  end
  
end
"
              end
              log "Installation completed successfully."
              return true
            end
            
          end
            
        end
        
      end
      
    end
    
  end
  
end
